snippet errp "Error panic" b
if err != nil {
	panic(err)
}
${0}
endsnippet

snippet scan "Scan variable" b
fmt.Fscanf(f, ${0}) 
endsnippet

snippet gcj "Gcj template" b
package main

import (
	"bufio"
	"fmt"
	"io"
	"os"
	"strings"
)

var testInp string = \`\`

const (
	input  = "" //"" for string, "stdin" or "filename"
	output = ""      //"" for stdout
)

/* START TEMPLATE {{{ */

var r io.Reader
var b io.WriteCloser
var w *bufio.Writer

func init() {

	var err error
	if input == "" {
		r = bufio.NewReader(strings.NewReader(testInp))
	} else if input == "stdin" {
		r = os.Stdin
	} else if r, err = os.Open(input); err != nil {
		panic(err)
	}

	if output == "" {
		b = os.Stdout
	} else if b, err = os.OpenFile(output, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0644); err != nil {
		panic(err)
	}
	w = bufio.NewWriter(b)
}

func main() {
	defer b.Close()
	defer w.Flush()

	var T uint64
	fmt.Fscan(r, &T)

	var t uint64
	for t = 1; t <= T; t++ {
		testCase(t)
	}
}

/* END TEMPLATE }}} */

func testCase(t uint64) {
	var ans string
	fmt.Fprintf(w, "Case #%d: %s\n", t, ans)
}
endsnippet


snippet forr "For range loop" b
for ${2:name} := range ${1:collection} {
	${0:${VISUAL}}
}
endsnippet

